// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should open the right popups when the buttons are clicked 1`] = `
Object {
  "openPopup": "edit",
}
`;

exports[`should open the right popups when the buttons are clicked 2`] = `
Object {
  "openPopup": "delete",
}
`;

exports[`should open the right popups when the buttons are clicked 3`] = `
<div
  className="issue-comment"
>
  <div
    className="issue-comment-author"
    title="John Doe"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
    John Doe
  </div>
  <div
    className="issue-comment-text markdown"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<b>test</b>",
      }
    }
  />
  <div
    className="issue-comment-age"
  >
    (
    a month ago
    )
  </div>
  <div
    className="issue-comment-actions"
  >
    <BubblePopupHelper
      className="bubble-popup-helper-inline"
      isOpen={false}
      offset={
        Object {
          "horizontal": -6,
          "vertical": 0,
        }
      }
      popup={
        <CommentPopup
          comment={
            Object {
              "authorAvatar": "gravatarhash",
              "authorName": "John Doe",
              "createdAt": "2017-03-01T09:36:01+0100",
              "htmlText": "<b>test</b>",
              "key": "comment-key",
              "updatable": true,
            }
          }
          customClass="issue-edit-comment-bubble-popup"
          onComment={[Function]}
          placeholder=""
          toggleComment={[Function]}
        />
      }
      position="bottomright"
      togglePopup={[Function]}
    >
      <button
        className="js-issue-comment-edit button-link icon-edit icon-half-transparent"
        onClick={[Function]}
      />
    </BubblePopupHelper>
    <BubblePopupHelper
      className="bubble-popup-helper-inline"
      isOpen={true}
      offset={
        Object {
          "horizontal": -10,
          "vertical": 0,
        }
      }
      popup={
        <CommentDeletePopup
          onDelete={[Function]}
        />
      }
      position="bottomright"
      togglePopup={[Function]}
    >
      <button
        className="js-issue-comment-delete button-link icon-delete icon-half-transparent"
        onClick={[Function]}
      />
    </BubblePopupHelper>
  </div>
</div>
`;

exports[`should render correctly a comment that is not updatable 1`] = `
<div
  className="issue-comment"
>
  <div
    className="issue-comment-author"
    title="John Doe"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
    John Doe
  </div>
  <div
    className="issue-comment-text markdown"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<b>test</b>",
      }
    }
  />
  <div
    className="issue-comment-age"
  >
    (
    a month ago
    )
  </div>
  <div
    className="issue-comment-actions"
  />
</div>
`;

exports[`should render correctly a comment that is updatable 1`] = `
<div
  className="issue-comment"
>
  <div
    className="issue-comment-author"
    title="John Doe"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
    John Doe
  </div>
  <div
    className="issue-comment-text markdown"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<b>test</b>",
      }
    }
  />
  <div
    className="issue-comment-age"
  >
    (
    a month ago
    )
  </div>
  <div
    className="issue-comment-actions"
  >
    <BubblePopupHelper
      className="bubble-popup-helper-inline"
      isOpen={false}
      offset={
        Object {
          "horizontal": -6,
          "vertical": 0,
        }
      }
      popup={
        <CommentPopup
          comment={
            Object {
              "authorAvatar": "gravatarhash",
              "authorName": "John Doe",
              "createdAt": "2017-03-01T09:36:01+0100",
              "htmlText": "<b>test</b>",
              "key": "comment-key",
              "updatable": true,
            }
          }
          customClass="issue-edit-comment-bubble-popup"
          onComment={[Function]}
          placeholder=""
          toggleComment={[Function]}
        />
      }
      position="bottomright"
      togglePopup={[Function]}
    >
      <button
        className="js-issue-comment-edit button-link icon-edit icon-half-transparent"
        onClick={[Function]}
      />
    </BubblePopupHelper>
    <BubblePopupHelper
      className="bubble-popup-helper-inline"
      isOpen={false}
      offset={
        Object {
          "horizontal": -10,
          "vertical": 0,
        }
      }
      popup={
        <CommentDeletePopup
          onDelete={[Function]}
        />
      }
      position="bottomright"
      togglePopup={[Function]}
    >
      <button
        className="js-issue-comment-delete button-link icon-delete icon-half-transparent"
        onClick={[Function]}
      />
    </BubblePopupHelper>
  </div>
</div>
`;
