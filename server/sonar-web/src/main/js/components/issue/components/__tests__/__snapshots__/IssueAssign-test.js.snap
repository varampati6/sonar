// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should open the popup when the button is clicked 1`] = `
Array [
  Array [
    "assign",
    Object {
      "currentTarget": Object {
        "blur": [Function],
      },
      "preventDefault": [Function],
      "stopPropagation": [Function],
      "target": Object {
        "blur": [Function],
      },
    },
  ],
]
`;

exports[`should open the popup when the button is clicked 2`] = `
<BubblePopupHelper
  isOpen={true}
  popup={
    <SetAssigneePopup
      issue={
        Object {
          "assignee": "john",
          "assigneeAvatar": "gravatarhash",
          "assigneeName": "John Doe",
        }
      }
      onFail={[Function]}
      onSelect={[Function]}
    />
  }
  position="bottomleft"
  togglePopup={[Function]}
>
  <button
    className="button-link issue-action issue-action-with-options js-issue-assign"
    onClick={[Function]}
  >
    <span>
      <span
        className="text-top"
      >
        <Connect(Avatar)
          className="little-spacer-right"
          hash="gravatarhash"
          name="John Doe"
          size={16}
        />
      </span>
      <span
        className="issue-meta-label"
      >
        John Doe
      </span>
    </span>
    <i
      className="little-spacer-left icon-dropdown"
    />
  </button>
</BubblePopupHelper>
`;

exports[`should render with the action 1`] = `
<BubblePopupHelper
  isOpen={false}
  popup={
    <SetAssigneePopup
      issue={
        Object {
          "assignee": "john",
          "assigneeAvatar": "gravatarhash",
          "assigneeName": "John Doe",
        }
      }
      onFail={[Function]}
      onSelect={[Function]}
    />
  }
  position="bottomleft"
  togglePopup={[Function]}
>
  <button
    className="button-link issue-action issue-action-with-options js-issue-assign"
    onClick={[Function]}
  >
    <span>
      <span
        className="text-top"
      >
        <Connect(Avatar)
          className="little-spacer-right"
          hash="gravatarhash"
          name="John Doe"
          size={16}
        />
      </span>
      <span
        className="issue-meta-label"
      >
        John Doe
      </span>
    </span>
    <i
      className="little-spacer-left icon-dropdown"
    />
  </button>
</BubblePopupHelper>
`;

exports[`should render without the action when the correct rights are missing 1`] = `
<span>
  <span
    className="text-top"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
  </span>
  <span
    className="issue-meta-label"
  >
    John Doe
  </span>
</span>
`;
